// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcVirtualPets;

namespace MvcVirtualPets.Migrations
{
    [DbContext(typeof(PetContext))]
    partial class PetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcVirtualPets.Models.ListAndEditPets", b =>
                {
                    b.Property<int>("ListAndEditPetsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ListAndEditPetsId");

                    b.ToTable("ListAndEdits");

                    b.HasData(
                        new { ListAndEditPetsId = 1 }
                    );
                });

            modelBuilder.Entity("MvcVirtualPets.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("ListAndEditPetsId");

                    b.Property<string>("Name");

                    b.HasKey("PetId");

                    b.HasIndex("ListAndEditPetsId");

                    b.ToTable("Pets");

                    b.HasData(
                        new { PetId = 1, Description = "Big dog.", ListAndEditPetsId = 1, Name = "Roscoe" },
                        new { PetId = 2, Description = "Really big dog.", ListAndEditPetsId = 1, Name = "Biggs" },
                        new { PetId = 3, Description = "Tiny dog.", ListAndEditPetsId = 1, Name = "Bella" }
                    );
                });

            modelBuilder.Entity("MvcVirtualPets.Models.Pet", b =>
                {
                    b.HasOne("MvcVirtualPets.Models.ListAndEditPets", "ListAndEditPets")
                        .WithMany("Pets")
                        .HasForeignKey("ListAndEditPetsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
